version: '3'
services:
  api-notify:
    image: 'diwise/api-notify:latest'
    build:
      context: ..
      dockerfile: ./deployments/Dockerfile
    restart: always
    depends_on:
      - rabbitmq
      - postgresdb
    links:
      - rabbitmq
      - postgresdb
    environment:
      DATABASE_URL: 'postgres://testuser:testpass@postgresdb:5432/devreg?sslmode=disable&pool_max_conns=10'
      SERVICE_PORT: '9090'
      RABBITMQ_HOST: 'rabbitmq'
    
    ports:
      - '9090:9090'

  postgresdb:
    image: 'diwise/testdb-postgres:latest'
    build:
      context: ..
      dockerfile: ./test/database/testdb-dockerfile
    restart: always
    environment:
      POSTGRES_DB: 'devreg'
      POSTGRES_USER: 'testuser'
      POSTGRES_PASSWORD: 'testpass'
    ports:
      - '5432:5432'

  rabbitmq:
    image: 'bitnami/rabbitmq:3.8'
    ports:
      - '4369'
      - '5672:5672'
      - '25672'
      - '15672'
    volumes:
      - 'rabbitmq_data:/bitnami'

  grafana:
    image: 'grafana/grafana:8.0.0'
    ports: 
      - '3000:3000'
    depends_on:
      - postgresdb
    volumes: 
      - 'grafana-storage:/var/lib/grafana'

  crate:
    image: crate:4.5
    command: crate -Cauth.host_based.enabled=false
      -Ccluster.name=democluster -Chttp.cors.enabled=true -Chttp.cors.allow-origin="*"
    ports:
      # Admin UI
      - "4200:4200"
      # Transport protocol
      - "4300:4300"
    environment: 
      CREAT_HEAP_SIZE: 2g
    volumes:
      - cratedata:/data      

  quantumleap:
    image: smartsdk/quantumleap:latest
    ports: 
      - '8668:8668'
    depends_on: 
      - crate
    environment: 
      CRATE_HOST: 'http://crate'

volumes:
  rabbitmq_data:
    driver: local
  grafana-storage:
    driver: local
  cratedata:
    driver: local
